{"noir_version":"0.23.0+5be9f9d7e2f39ca228df10e5a530474af0331704","hash":500475102574808604,"abi":{"parameters":[{"name":"proofs","type":{"kind":"array","length":3,"type":{"kind":"struct","path":"Proof","fields":[{"name":"verification_key","type":{"kind":"array","length":114,"type":{"kind":"field"}}},{"name":"proof","type":{"kind":"array","length":93,"type":{"kind":"field"}}},{"name":"public_inputs","type":{"kind":"array","length":1,"type":{"kind":"field"}}},{"name":"key_hash","type":{"kind":"field"}}]}},"visibility":"private"}],"param_witnesses":{"proofs":[{"start":0,"end":627}]},"return_type":null,"return_witnesses":[]},"bytecode":"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","debug_symbols":"lcsxCoAwDAXQu/y5g9oqmKuIQ9EKhdKKyRZyd+kROr7hKUq7ouRWGaSYQIeC31i7WOInoBBWh1Rv0Ba8OTy5JJDf7XSYR8MyFsx+","file_map":{"39":{"source":"use dep::std;\n\nglobal num_proofs = 3;\n\nstruct Proof {\n    verification_key: [Field; 114],\n    proof: [Field; 93],\n    public_inputs: [Field; 1],\n    key_hash: Field,\n}\nfn main(\n    proofs: [Proof; num_proofs] // verification_keys: pub [[Field; 114]; num_proofs],\n    // proofs: pub [[Field; 93]; num_proofs],\n    // public_inputs: pub [[Field; 1]; num_proofs],\n    // key_hashes: pub [Field; num_proofs]\n) {\n    for i in 0..num_proofs {\n        std::verify_proof(\n            proofs[i].verification_key.as_slice(),\n            proofs[i].proof.as_slice(),\n            proofs[i].public_inputs.as_slice(),\n            proofs[i].key_hash\n        );\n    }\n}\n","path":"/Users/tuhoang/Repos/solidity-learning/hardhat2/circuits/rollup/src/main.nr"}}}